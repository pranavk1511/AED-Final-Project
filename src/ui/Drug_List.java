/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author 91983
 */
public class Drug_List extends javax.swing.JFrame {
    Connection con = null;
PreparedStatement pre = null;
ResultSet res= null;
String sql1;
String sql2;
String sql3;

    /**
     * Creates new form Drug_List
     */
    public Drug_List() {
        initComponents();
        con=DBconnection.getConnection();
        drug_list();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        druglist = new javax.swing.JTable();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        sort_by = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        druglist.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        druglist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "         Name", "         Type", "         Barcode", "         Price", "         Expiry", "         Company"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        druglist.getTableHeader().setReorderingAllowed(false);
        druglist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                druglistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(druglist);

        label1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label1.setText("Drug List");

        label2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        label2.setText("Sort By");

        sort_by.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort By : ", "Name", "Type", "Expiration" }));
        sort_by.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sort_byItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(353, 353, 353)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sort_by, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sort_by, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(317, 317, 317))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void druglistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_druglistMouseClicked
        int row = druglist.getSelectedRow();
        String t = druglist.getModel().getValueAt(row,2).toString();
        String sql = "select * from drugs where BARCODE='"+t+"' ";
        try{
            pre=con.prepareStatement(sql);
            res=pre.executeQuery();
            if(res.next()){
                String Name = res.getString("NAME");
                Home_Page.drug.name.setText(Name);

                String Type = res.getString("TYPE");
                Home_Page.drug.type.setSelectedItem(Type);

                String Barcode = res.getString("BARCODE");
                Home_Page.drug.barcode.setText(Barcode);

                String Code = res.getString("CODE");
                Home_Page.drug.code.setText(Code);

                String Dose = res.getString("DOSE");
                Home_Page.drug.dose.setText(Dose);

                String cost_price = res.getString("COST_PRICE");
                Home_Page.drug.cost_price.setText(cost_price);

                String sell_price = res.getString("SELLING_PRICE");
                Home_Page.drug.selling_price.setText(sell_price);

                String company_Name = res.getString("COMPANY_NAME");
                Home_Page.drug.company_name.setSelectedItem(company_Name);

                String Quantity = res.getString("QUANTITY");
                Home_Page.drug.quantity.setSelectedItem(Quantity);

                String Day = res.getString("PRODUCTION_DATE").split("-")[0];
                Home_Page.drug.pro_day.setSelectedItem(Day);
                String Month = res.getString("PRODUCTION_DATE").split("-")[1];
                Home_Page.drug.pro_month.setSelectedItem(Month);
                String Year = res.getString("PRODUCTION_DATE").split("-")[2];
                Home_Page.drug.pro_year.setSelectedItem(Year);

                String ex_Day = res.getString("EXPIRATION_DATE").split("-")[0];
                Home_Page.drug.exp_day.setSelectedItem(ex_Day);
                String ex_Month = res.getString("EXPIRATION_DATE").split("-")[1];
                Home_Page.drug.exp_month.setSelectedItem(ex_Month);
                String ex_Year = res.getString("EXPIRATION_DATE").split("-")[2];
                Home_Page.drug.exp_year.setSelectedItem(ex_Year);

                String sec = res.getString("PLACE").split("-")[0];
                Home_Page.drug.section.setSelectedItem(sec);
                String pla = res.getString("PLACE").split("-")[1];
                Home_Page.drug.place.setSelectedItem(pla);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage(),"Error",2);
        }
    }//GEN-LAST:event_druglistMouseClicked

    private void sort_byItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sort_byItemStateChanged
        switch (sort_by.getSelectedIndex()){ // one case will execute in these cases
            case 1 : {
                sql1 = "select NAME , TYPE ,BARCODE,SELLING_PRICE , EXPIRY , COMPANY_NAME from drugs order by NAME";
                sort(1);  break;  //1- order by name from A - Z
            }
            case 2 : {
                sql2 = "select NAME , TYPE ,BARCODE,SELLING_PRICE , EXPIRY , COMPANY_NAME from drugs order by TYPE";
                sort(2);break;  // 2- order by type from A - Z
            }
            case 3 : {
                sql3 = "select NAME , TYPE ,BARCODE,SELLING_PRICE , EXPIRY , COMPANY_NAME from drugs order by EXPIRY DESC";
                sort(3); break; //3- order by expiry , so the most expiry will be first (drug expired)
            }
        }
    }//GEN-LAST:event_sort_byItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Drug_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Drug_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Drug_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Drug_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Drug_List().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable druglist;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JComboBox<String> sort_by;
    // End of variables declaration//GEN-END:variables
private void drug_list(){ // this method will be executed when you click on drug_list
    String sql = "select NAME , TYPE ,BARCODE,SELLING_PRICE , EXPIRY , COMPANY_NAME from drugs"; // get data from database
    try{
        pre=con.prepareStatement(sql); // prepare sql statement
        res=pre.executeQuery(); // execute sql statement
        druglist.setModel(DbUtils.resultSetToTableModel(res)); // set data in the table 
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,e.getMessage(),"Error",2);
    }
}
private void sort(int index){ // one case will execute in these cases 1 or 2 or 3 depend on the index number;
    try{
   switch (index){
       case 1 : {
        pre=con.prepareStatement(sql1);
        res=pre.executeQuery();
        druglist.setModel(DbUtils.resultSetToTableModel(res));   
      }break;
       case 2 : {
       pre=con.prepareStatement(sql2);
        res=pre.executeQuery();
        druglist.setModel(DbUtils.resultSetToTableModel(res));    
       }break;
       case 3 : {
       pre=con.prepareStatement(sql3);
        res=pre.executeQuery();
        druglist.setModel(DbUtils.resultSetToTableModel(res));    // set data in the table 
       }
    }    
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,e.getMessage(),"Error",2);
    }}
}
